---
 # Note to translators:
 #   most languages don't have two ways to pronounce 'a' -- if not need, remove the rules and change "B-Z" to "A-Z"
 #   some languages say the word for "uppercase" after the letter. Make sure to change that where appropriate by moving some code around
 - "a": 
    - test: 
        if: "$TTS='none'"
        then: [T: "eigh"]                         # long "a" sound in all speech engines I tested (espeak, MS SAPI, eloquence,
        else: [spell: "'a'"]                         #    AWS Polly, ReadSpeaker, NaturalReader, google cloud, nuance, ibm watson)
 - "b-z": 
    - test: 
        if: "$TTS='none'"
        then: [T: "."]                          
        else: [spell: "'.'"]                       

 # Capital letters are a little tricky: users can pick their favorite word (something that was requested) and 
 # screen readers have options to use pitch changes or beeps instead of or in addition to say "cap"
 # Also, if a user can see the screen, they probably don't need to hear "cap", but if they specified an override, they must want to hear the override.

 - "A":
    - test: 
        if: "$CapitalLetters_Beep"
        then:
        - audio:
            value: "beep.mp4"
            replace: []
    - test: 
        if: "$CapitalLetters_UseWord"
        then_test:
          if: "$SpeechOverrides_CapitalLetters = ''"
          then_test:
            if: "$Impairment = 'Blindness'"
            then: [T: "大写"]
          else: [x: "$SpeechOverrides_CapitalLetters"]
    - pitch:
        value: "$CapitalLetters_Pitch"
        replace:
        - test:
            if: "$TTS='none'"
            then: [T: "eigh"]
            else: [spell: "'a'"]

 - "B-Z":
    - test: 
        if: "$CapitalLetters_Beep"
        then:
        - audio:
            value: "beep.mp4"
            replace: []
    - test: 
        if: "$CapitalLetters_UseWord"
        then_test:
          if: "$SpeechOverrides_CapitalLetters = ''"
          then_test:
            if: "$Impairment = 'Blindness'"
            then: [T: "大写"]
          else: [x: "$SpeechOverrides_CapitalLetters"] 
    - pitch:
        value: "$CapitalLetters_Pitch"
        # note: processing of ranges converts '.' into the character, so it needs to be in quotes below
        replace: [spell: "translate('.', 'BCDEFGHIJKLMNOPQRSTUVWXYZ', 'bcdefghijklmnopqrstuvwxyz')"]

 - "0-9": [T: "."]

 - " ": [T: " "]                     # 0x20

 - "!":                                         	#  0x21
    - test:
        if: "ancestor-or-self::*[contains(@data-intent-property, ':structure:')]"
        then: [T: "叹号"]                     	#  0x21	(en: 'exclamation point')
        else: [T: "阶乘"]                         	#  0x21	(en: 'factorial')

 - "\"": [T: "引号"]                             	#  0x22	(en: 'quotation mark')
 - "#": [T: "数号"]                             	#  0x23	(en: 'number')
 - "$": [T: "美元"]                             	#  0x24	(en: 'dollars')
 - "%": [T: "百分号"]                              	#  0x25	(en: 'percent')
 - "&": [T: "和号"]                               	#  0x26	(en: 'ampersand')
 - "'": [T: "丿号"]                             	#  0x27	(en: 'apostrophe')
 - "(":                                         	#  0x28
    - test:
        if: $SpeechStyle = 'ClearSpeak' or $SpeechStyle = 'SimpleSpeak'
        then_test:
            if: "$Verbosity='Terse'"
            then: [T: "开号"]                     	#  0x28	(en: 'open')
            else: [T: "开括号"]                    	#  0x28	(en: 'open paren')
        else: [T: "左括号"]                        	#  0x28	(en: 'left paren')
 - ")":                                         	#  0x29
    - test:
        if: $SpeechStyle = 'ClearSpeak' or $SpeechStyle = 'SimpleSpeak'
        then_test:
            if: "$Verbosity='Terse'"
            then: [T: "关号"]                     	#  0x29	(en: 'close')
            else: [T: "关括号"]                    	#  0x29	(en: 'close paren')
        else: [T: "右括号"]                        	#  0x29	(en: 'right paren')

 - "*":                                         	#  0x2a
    test:
        if: "parent::*[name(.)='msup' or name(.)='msubsup' or name(.)='skip-super']"
        then: [T: "星号"]                         	#  0x2a	(en: 'star')
        else: [T: "乘"]                          	#  0x2a	(en: 'times')
 - "+": [T: "加"]                                	#  0x2b	(en: 'plus')
 - ",":                                         	#  0x2c
    # the following deals with the interaction of "," with "…" which sometimes wants the ',' to be silent
    # that this test is here and not with "…" is not ideal, but seems simplest
     test:
        if:
            - "$SpeechStyle != 'ClearSpeak' or $ClearSpeak_Ellipses = 'Auto' or "
               # must be ClearSpeak and $ClearSpeak_Ellipses = 'AndSoOn'
               # speak "comma" when not adjacent to '…'
            - "( following-sibling::*[1][text()!= '…'] and preceding-sibling::*[1][text()!='…']  ) or "
               # except if expression starts with '…'
            - "../*[1][text()='…'] "
        then: [T: "逗号"]                         	# 	(en: 'comma')
        # else silent

 - "-": [T: "减"]                                	#  0x2d	(en: 'minus')
 - ".":                                         	#  0x2e
    - test:
        if: "parent::*[1][self::m:mn]"
        then: [T: "点"]                         	# 	(en: 'point')
        else: [T: "据点"]                          	# 	(en: 'dot')
 - "/": [T: "除以"]                               	#  0x2f	(en: 'divided by')
 - ":": [T: "冒号"]                               	#  0x3a	(en: 'colon')
 - ";": [T: "分号"]                               	#  0x3b	(en: 'semicolon')
 - "<":                                         	#  0x3c
     - T: "小于"                                  	# 	(en: 'less than')
 - "=":                                         	#  0x3d
     - T: "等于"                         	# 	(en: 'equals')

 - ">":                                         	#  0x3e
     - T: "大于"                                  	# 	(en: 'greater than')
 - "?": [T: "问号"]                               	#  0x3f	(en: 'question mark')
 - "@": [T: "at"]                              	#  0x40	(en: 'at sign')
 - "[":                                         	#  0x5b
    - test:
        if: $SpeechStyle = 'ClearSpeak' or $SpeechStyle = 'SimpleSpeak'
        then: [T: "开方括号"]                       	# 	(en: 'open bracket')
        else: [T: "左方括号"]                    	# 	(en: 'left bracket')
 - "\\": [T: "反斜杠"]                         	#  0x5c	(en: 'back slash')
 - "]":                                         	#  0x5d
    - test:
        if: $SpeechStyle = 'ClearSpeak' or $SpeechStyle = 'SimpleSpeak'
        then: [T: "关方括号"]                       	# 	(en: 'close bracket')
        else: [T: "右方括号"]                    	# 	(en: 'right bracket')
 - "^":                                         	#  0x5e
    - test:
        if: "parent::m:modified-variable or parent::m:mover"
        then: [T: "帽"]                         	# 	(en: 'hat')
        else: [T: "拖字符"]                       	# 	(en: 'caret')
 - "_": [T: "下划线"]                              	#  0x5f	(en: 'under bar')
 - "`": [T: "反丿号"]                               	#  0x60	(en: 'grave')
 - "{":                                         	#  0x7b
    - test:
        if: $SpeechStyle = 'ClearSpeak' or $SpeechStyle = 'SimpleSpeak'
        then: [T: "开花括号"]                       	# 	(en: 'open brace')
        else: [T: "左大括号"]                       	# 	(en: 'left brace')
 - "|":                                         	#  0x7c
    # note: for ClearSpeak and SimpleSpeak, "|" inside of sets is handled at the mrow level, same for 'sets'
     - test:
        - if: "$SpeechStyle != 'ClearSpeak' or not(preceding-sibling::*) or not(following-sibling::*)"
          then: [T: "竖线"]                       	# 	(en: 'vertical line')
        - else_if: "$ClearSpeak_VerticalLine = 'SuchThat'"
          then: [t: "这样"]                       	# 	(en: 'such that', google translation)
        - else_if: "$ClearSpeak_VerticalLine = 'Given'"  
          then: [t: "给出"]                       	# 	(en: 'given', google translation)
        - else: [T: "分隔线"]                       	# 	(en: 'divides')

 - "}":                                         	#  0x7d
    - test:
        if: $SpeechStyle = 'ClearSpeak' or $SpeechStyle = 'SimpleSpeak'
        then: [T: "关大花括号"]                       	# 	(en: 'close brace')
        else: [T: "右花括号"]                       	# 	(en: 'right brace')

 - "~": [T: "波浪号"]                             	#  0x7e	(en: 'tilde')
 - " ":                                         	#  0xa0
    - test:
        if: "@data-empty-in-2D and ../../../../*[name(.)!='equations']"
        then: [T: "空白"]                         	#  want to say something for fraction (etc) with empty child	(en: 'empty')
        else: [t: ""]                            

 - "¬": [T: "非"]                                	#  0xac	(en: 'not')
 - "°": [T: "度"]                               	#  0xb0	(en: 'degrees')
 - "±": [T: "加减"]                               	#  0xb1	(en: 'plus or minus')
 - "´": [t: "尖重音"]                             	#  0xb4	(en: 'acute')
 - "·":                                         	#  0xB7
    - test:
        if: "$SpeechStyle != 'ClearSpeak' or $ClearSpeak_MultSymbolDot = 'Auto'"
        then: [T: "点乘"]                         	# 	(en: 'times')
        else: [T: "点"]                          	# 	(en: 'dot')
 - "×":                                         	#  0xd7
    - test:
        if: "$SpeechStyle != 'ClearSpeak' or $ClearSpeak_MultSymbolX = 'Auto'"
        then: [T: "乘以"]                         	# 	(en: 'times')
        else_test:
            if: $ClearSpeak_MultSymbolX = 'By'
            then: [T: "乘"]                     	# 	(en: 'by')
            else: [T: "叉乘"]                      	# 	(en: 'cross')
 - "÷": [T: "除以"]                                	#  0xf7	(en: 'divided by')
 - "̀": [t: "抑音修饰"]                             	#  0x300	(en: 'grave accent embellishment', google: '严重的口音装饰')
 - "́": [t: "结合的尖重音"]                           	#  0x301	(en: 'acute accent embellishment', google: '急性口音装饰')
 - "̂": [t: "帽子修饰"]                             	#  0x302	(en: 'circumflex accent embellishment', google: '绕过额的口音装饰')
 - "̃": [t: "颚化符修饰"]                            	#  0x303	(en: 'tilde embellishment', google: 'tilde点缀')
 - "̄": [t: "结合 长音符号"]                          	#  0x304	(en: 'macron embellishment', google: '马克龙点缀')
 - "̅": [t: "上横 修饰"]                            	#  0x305	(en: 'overbar embellishment', google: '额外的点缀')
 - "̆": [t: "结合 breve"]                         	#  0x306	(en: 'breve', google: '布雷夫')
 - "̇": [t: "上点 修饰"]                            	#  0x307	(en: 'dot above embellishment', google: '点点上方')

   # Note: ClearSpeak has pref TriangleSymbol for "Δ", but that is wrong
 - "Α-Ω": 
    - test: 
        if: "$CapitalLetters_Beep"
        then:
        - audio:
            value: "beep.mp4"
            replace: []
    - test: 
        if: "$CapitalLetters_UseWord"
        then_test:
          if: "$SpeechOverrides_CapitalLetters = ''"
          then_test:
            if: "$Impairment = 'Blindness'"
            then: [T: "大写"]                     	# 	(en: 'cap')
          else: [x: "$SpeechOverrides_CapitalLetters"] 
    - pitch:
        value: "$CapitalLetters_Pitch"
        # note: processing of ranges converts '.' into the character, so it needs to be in quotes below
        replace: [spell: "translate('.', 'ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ΢ΣΤΥΦΧΨΩ', 'αβγδεζηθικλμνξοπρςστυφχψω')"]

 - "α": [T: "alpha"]                               # 0x3b1
 - "β": [T: "beta"]                                # 0x3b2
 - "γ": [T: "gamma"]                               # 0x3b3
 - "δ": [T: "delta"]                               # 0x3b4
 - "ε": [T: "epsilon"]                             # 0x3b5
 - "ζ": [T: "zeta"]                                # 0x3b6
 - "η": [T: "eta"]                                 # 0x3b7
 - "θ": [T: "theta"]                               # 0x3b8
 - "ι": [T: "iota"]                                # 0x3b9
 - "κ": [T: "kappa"]                               # 0x3ba
 - "λ": [T: "lambda"]                               # 0x3bb
 - "μ": [T: "mu"]                                  # 0x3bc
 - "ν": [T: "nu"]                                  # 0x3bd
 - "ξ": [T: "xi"]                                  # 0x3be
 - "ο": [T: "omicron"]                             # 0x3bf
 - "π": [T: "pi"]                                  # 0x3c0
 - "ρ": [T: "rho"]                                 # 0x3c1
 - "ς": [T: "sigma"]                      	#  0x3c2	(en: 'final sigma')
 - "σ": [T: "sigma"]                               # 0x3c3
 - "τ": [T: "tau"]                                 # 0x3c4
 - "υ": [T: "upsilon"]                             # 0x3c5
 - "φ": [T: "phi"]                                 # 0x3c6
 - "χ": [T: "chi"]                                 # 0x3c7
 - "ψ": [T: "psi"]                                 # 0x3c8
 - "ω": [T: "omega"]                               # 0x3c9
 - "ϕ": [T: "phi 号"]                            # 0x3d5
 - "ϖ": [T: "pi 号"]                             # 0x3d6
 - "ϵ": [T: "弧 epsilon"]                      # 0x3f5
 - "϶": [T: "反 epsilon"]                      	#  0x3f6	(en: 'reversed epsilon')

 - "–": [T: "连号"]                          	#  0x2013
 - "—": [T: "破折号"]                          	#  0x2014
 - "―": [T: "横线"]                               	#  0x2015	(en: 'horizontal bar')
 - "‖": [T: "双竖线"]                             	#  0x2016	(en: 'double vertical line')
 - "…":                                         	#  0x2026
    test:
        if:
            - "$SpeechStyle != 'ClearSpeak' or $ClearSpeak_Ellipses = 'Auto' or"
               # must be ClearSpeak and $ClearSpeak_Ellipses = 'AndSoOn'
               # speak '…' as 'and so on...' unless expr starts with '…'
            - "../*[1][text()='…']"
        then: [t: "点点点"]                        	# 	(en: 'dot dot dot', google translation)
        else_test:                              	#  must have $ClearSpeak_Ellipses = 'AndSoOn'
            if: "count(following-sibling::*) = 0"
            then: [t: "等等"]                     	# 	(en: 'and so on', google translation)
            else: [t: "等等"]                     	# 	(en: 'and so on up to', google translation)

 - "⁡":                                         	#  0x2061
    - test:
        if: "$Verbosity!='Terse' and not(preceding-sibling::*[1][IsInDefinition(., 'GeometryShapes')]) and
             not(@data-changed='added' and ancestor-or-self::*[contains(@data-intent-property, ':structure:')])"
        then: [T: "关于"]                          	# 	(en: 'of')
 - "⁢": [t: ""]                                 	#  0x2062
 - "⁣": [t: ""]                                 	#  0x2063
 - "⁤": [T: "和"]                                	#  0x2064	(en: 'and')
 - "′": [T: "丿"]                            	#  0x2032
 - "″": [T: "双丿"]                     	#  0x2033
 - "‴": [T: "三丿"]                     	#  0x2034

 - "ℂℕℚℝℤ":                                     	#  here we rely on this running through the table again to speak "cap xxx"
    - T: "双线"                         	# 	(en: 'double-struck')
    - spell: "translate('.', 'ℂℕℚℝℤ', 'CNQRZ')"

 - "℃": [T: "攝氏度"]                             	#  0x2103	(en: 'degrees celsius')
 - "℉": [T: "华氏度"]                             	#  0x2109	(en: 'degrees fahrenheit')
 - "ℋℛℓ":                                       	#  0x210b
    - T: "手写体"                                 	# 	(en: 'script')
    - spell: "translate('.', 'ℋℛℓ', 'HRl')"
 - "ℎ": [T: "普朗克常量"]                            	#  0x210e	(en: 'planck constant')
 - "ℜ":                                         	#  0x211c
    - T: "德文尖角体"
    - spell: "'R'"

 - "Ω": [T: "欧姆"]                               	#  0x2126	(en: 'ohms')
 - "K": [T: "开尔文"]                             	#  0x212a	(en: 'kelvin')
 - "Å": [t: "埃"]                           	#  0x212b	(en: 'angstroms')
 - "ⅆⅇⅈⅉ":                                      	#  0x2146-9
    - t: "双线斜体"                                 	# 	(en: 'double-struck italic', google translation)
    - spell: "translate('.', 'ⅆⅇⅈⅉ', 'deij')"

 - "←": [T: "左箭头"]                              	#  0x2190	(en: 'leftwards arrow')
 - "↑": [T: "上箭头"]                             	#  0x2191	(en: 'upwards arrow')
 - "→":                                         	#  0x2192
     - test:
        if: "ancestor::*[2][self::m:limit]"
        then: [T: "趋近于"]                         	# 	(en: 'approaches')
        else: [T: "右箭頭"]                        	# 	(en: 'right arrow')

 - "↓": [T: "下箭头"]                             	#  0x2193	(en: 'downwards arrow')
 - "⇒": [T: "向右双箭头"]                            	#  0x21d2	(en: 'rightwards double arrow')
 - "∀": [T: "任意"]                             	#  0x2200	(en: 'for all')
 - "∂":                                         	#  0x2202
     - test: 
         if: "$Verbosity='Terse'"
         then: [T: "偏导"]                       	# 	(en: 'partial')
         else: [T: "偏微分"]                       	# 	(en: 'partial derivative')
 - "∃": [T: "存在"]                               	#  0x2203	(en: 'there exists')
 - "∄": [T: "不存在"]                              	#  0x2204	(en: 'there does not exist')
 - "∅": [T: "空集"]                               	#  0x2205	(en: 'empty set')
 - "∆":                                         	#  0x2206
     - T: "增量"                                  	# 	(en: 'the laplacian of')
 - "∇":                                         	#  0x2207
     - T: "梯度"                                 	# 	(en: 'the gradient of')
 - "∈":                                         	#  0x2208
     - test:
        if: "$SpeechStyle != 'ClearSpeak'"
        then: [t: "一个元素"]                       	# 	(en: 'an element of', google translation)
        # Several options for speaking elements in ClearSpeak -- they split between being inside a set or not and then the option
        else_test:
            if: "../../self::m:set or ../../../self::m:set"	#  inside a set
            then_test:
              - if: $ClearSpeak_SetMemberSymbol = 'Auto' or $ClearSpeak_SetMemberSymbol = 'In'
                then: [t: "在"]                  	# 	(en: 'in', google translation)
              - else_if: $ClearSpeak_SetMemberSymbol = 'Member'
                then: [t: "成员"]                 	# 	(en: 'member of', google translation)
              - else_if: $ClearSpeak_SetMemberSymbol = 'Element'
                then: [t: "元素"]                 	# 	(en: 'element of', google translation)
              - else: [t: "的元素"]                	#  $ClearSpeak_SetMemberSymbol = 'Belongs'	(en: 'belonging to', google: '属于')
            else_test:
              - if: $ClearSpeak_SetMemberSymbol = 'Auto' or $ClearSpeak_SetMemberSymbol = 'Member'
                then: [t: "是"]                  	# 	(en: 'is a member of', google translation)
              - else_if: $ClearSpeak_SetMemberSymbol = 'Element'
                then: [t: "是一个元素"]              	# 	(en: 'is an element of', google translation)
              - else_if: $ClearSpeak_SetMemberSymbol = 'In'
                then: [t: "在"]                  	# 	(en: 'is in', google translation)
              - else: [t: "的元素"]                	#  $ClearSpeak_SetMemberSymbol = 'Belongs'	(en: 'belongs to', google: '属于')
 - "∉":                                         	#  0x2209
    # rule is identical to 0x2208
     - test:
        if: "$SpeechStyle != 'ClearSpeak'"
        then: [t: "不是一个元素"]                     	# 	(en: 'is not an element of', google translation)
        # Several options for speaking elements in ClearSpeak -- they split between being inside a set or not and then the option
        else_test:
            if: "../../self::m:set or ../../../self::m:set"	#  inside a set
            then_test:
              - if: $ClearSpeak_SetMemberSymbol = 'Auto' or $ClearSpeak_SetMemberSymbol = 'In'
                then: [t: "不在"]                 	# 	(en: 'not in', google translation)
              - else_if: $ClearSpeak_SetMemberSymbol = 'Member'
                then: [t: "不是成员"]               	# 	(en: 'not member of', google translation)
              - else_if: $ClearSpeak_SetMemberSymbol = 'Element'
                then: [t: "不是"]                 	# 	(en: 'not element of', google translation)
              - else: [t: "不属于的元素"]             	#  $ClearSpeak_SetMemberSymbol = 'Belongs'	(en: 'not belonging to', google: '不属于')
            else_test:
              - if: $ClearSpeak_SetMemberSymbol = 'Auto' or $ClearSpeak_SetMemberSymbol = 'Member'
                then: [t: "不是成员"]               	# 	(en: 'is not a member of', google translation)
              - else_if: $ClearSpeak_SetMemberSymbol = 'Element'
                then: [t: "不是一个元素"]             	# 	(en: 'is not an element of', google translation)
              - else_if: $ClearSpeak_SetMemberSymbol = 'In'
                then: [t: "不在"]                 	# 	(en: 'is not in', google translation)
              - else: [t: "不属于的元素"]             	#  $ClearSpeak_SetMemberSymbol = 'Belongs'	(en: 'does not belong to', google: '不属于')
 - "∊":                                         	#  0x220a
     - test:
        if: "$SpeechStyle != 'ClearSpeak'"
        then: [t: "是一个元素"]                      	# 	(en: 'is an element of', google translation)
        # Several options for speaking elements in ClearSpeak -- they split between being inside a set or not and then the option
        else_test:
            if: "../../self::m:set or ../../../self::m:set"	#  inside a set
            then_test:
              - if: $ClearSpeak_SetMemberSymbol = 'Auto' or $ClearSpeak_SetMemberSymbol = 'In'
                then: [t: "在"]                  	# 	(en: 'in', google translation)
              - else_if: $ClearSpeak_SetMemberSymbol = 'Member'
                then: [t: "成员"]                 	# 	(en: 'member of', google translation)
              - else_if: $ClearSpeak_SetMemberSymbol = 'Element'
                then: [t: "元素"]                 	# 	(en: 'element of', google translation)
              - else: [t: "的元素"]                	#  $ClearSpeak_SetMemberSymbol = 'Belongs'	(en: 'belonging to', google: '属于')
            else_test:
              - if: $ClearSpeak_SetMemberSymbol = 'Auto' or $ClearSpeak_SetMemberSymbol = 'Member'
                then: [t: "是"]                  	# 	(en: 'is a member of', google translation)
              - else_if: $ClearSpeak_SetMemberSymbol = 'Element'
                then: [t: "是一个元素"]              	# 	(en: 'is an element of', google translation)
              - else_if: $ClearSpeak_SetMemberSymbol = 'In'
                then: [t: "在"]                  	# 	(en: 'is in', google translation)
              - else: [t: "的元素"]                	#  $ClearSpeak_SetMemberSymbol = 'Belongs'	(en: 'belongs to', google: '属于')
 - "∏": [T: "乘积"]                                	#  0x220f	(en: 'product')
 - "∐": [T: "余积"]                              	#  0x2210	(en: 'co-product')
 - "∑": [T: "求和"]                                	#  0x2211	(en: 'sum')
 - "−": [T: "减去"]                                	#  0x2212	(en: 'minus')
 - "∓": [T: "减加"]                               	#  0x2213	(en: 'minus or plus')
 - "∗": [T: "星算符"]                             	#  0x2217	(en: 'times')
 - "∘": [T: "圆圈"]                               	#  0x2218	(en: 'composed with')
 - "√":                                         	#  0x221a
     - T: "根号"                                  	# 	(en: 'the square root of')
 - "∝":                                         	#  0x221d
     - T: "成比例"                                 	# 	(en: 'is proportional to')
 - "∞": [T: "无穷大"]                               	#  0x221e	(en: 'infinity')
 - "∟": [T: "直角"]                               	#  0x221f	(en: 'right angle')
 - "∠": [T: "角度"]                               	#  0x2220	(en: 'angle')
 - "∡": [T: "测量角"]                            	#  0x2221	(en: 'measured angle')
 - "∣": [T: "可除"]                                	#  0x2223	(en: 'divides')
 - "∤": [T: "不可除"]                              	#  0x2224	(en: 'does not divide')
 - "∥":                                         	#  0x2225
     - T: "平行于"                                 	# 	(en: 'is parallel to')
 - "∦":                                         	#  0x2226
     - T: "不平行于"                                	# 	(en: 'is not parallel to')
 - "∧": [T: "且"]                                	#  0x2227	(en: 'and')
 - "∨": [T: "或"]                                	#  0x2228	(en: 'or')
 - "∩": [T: "交"]                               	#  0x2229	(en: 'intersection')
 - "∪": [T: "并"]                               	#  0x222a	(en: 'union')
 - "∫": [T: "积分"]                               	#  0x222b	(en: 'integral')
 - "∬": [T: "二重积分"]                              	#  0x222c	(en: 'double integral')
 - "∭": [T: "三重积分"]                             	#  0x222d	(en: 'triple integral')
 - "∮": [T: "围道积分"]                             	#  0x222e	(en: 'contour integral')
 - "∶":                                         	#  0x2236
     - T: "比"                                  	# 	(en: 'is to')
 - "∷": [T: "比例"]                               	#  0x2237	(en: 'as')
 - "∼": [t: "颚化符运算"]                            	#  0x223c	(en: 'varies with', google: '随之而来')
 - "∽": [t: "倒置的颚化符"]                           	#  0x223d	(en: 'reversed tilde', google: '扭转了蒂尔德')
 - "∾":                                         	#  0x223e
     - test: 
         if: "$Verbosity!='Terse'"
         then: [t: "是"]                         	# 	(en: 'is', google translation)
     - t: "倒置的惰性 s"                             	# 	(en: 'most positive', google: '最积极的')
 - "∿": [T: "正弦曲线"]                             	#  0x223f	(en: 'sine wave')
 - "≠":                                         	#  0x2260
     - T: "不等于"                                 	# 	(en: 'is not equal to')
 - "≡":                                         	#  0x2261
     - T: "恒等于"                                  	# 	(en: 'is identical to')
 - "≤":                                         	#  0x2264
     - T: "小于或等于"                               	# 	(en: 'is less than or equal to')
 - "≥":                                         	#  0x2265
     - T: "大于或等于"                               	# 	(en: 'is greater than or equal to')
 - "≦": [T: "小于等于"]                             	#  0x2266	(en: 'less than over equal to')
 - "≧": [T: "大于等于"]                             	#  0x2267	(en: 'greater than over equal to')
 - "≺": [T: "先于"]                              	#  0x227a	(en: 'precedes')
 - "≻": [T: "后于"]                              	#  0x227b	(en: 'succeeds')
 - "⊂":                                         	#  0x2282
     - T: "含于"                                  	# 	(en: 'is a subset of')
 - "⊃":                                         	#  0x2283
     - T: "包含"                                  	# 	(en: 'is a superset of')
 - "⊄":                                         	#  0x2284
     - T: "不含于"                                 	# 	(en: 'is not a subset of')
 - "⊅":                                         	#  0x2285
     - T: "不包含"                                 	# 	(en: 'is not a superset of')
 - "⊆":                                         	#  0x2286
     - T: "包含于"                               	# 	(en: 'is subset of or equal to')
 - "⊇":                                         	#  0x2287
     - T: "包含或相等"                               	# 	(en: 'is superset of or equal to')
